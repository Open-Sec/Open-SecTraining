description = [[Search for exploits in the csv file from exploit-db.com]]
---
--@usage
-- nmap -sV -v <host> --script exploitdb,smb-check-vulns --script-args qchars=14
--
-- @args qchars OPTIONAL as no exact match could happen between port.version.version and the "banner" field (files_exploits.csv 3rd field), this parameter is to specify how many chars will be taken from port.version.version.
-- Example :
-- MySQL ---> port.version.product
-- 5.5.5-10.3.23-MariaDB-1  ---> port.version.version
-- As there is no exact match with banner field at files_exploits.csv, you might want to search just for 5.5 exploits, use qchars=3
--
author = "wcu35745"
license = "Same as Nmap--See http://nmap.org/book/man-legal.html"
categories = {"safe", "vuln"}

local stdnse = require("stdnse")

portrule = function(host, port)
    return port.state == "open"
end

action = function(host, port)
    local qchars = 20
    if nmap.registry.args.qchars ~= nil then
        qchars = nmap.registry.args.qchars
    end

    local producto = string.sub(port.version.product,1,10)
    --to remove httpd from "Apache httpd"
    if string.match(producto,"Apache") then
    	producto ="Apache"
    end

    local version = string.sub(port.version.version,1,qchars)

    local banner = producto.." "..version
    --NSE: MySQL port.version.product
    --NSE: 5.5.5-10.3.23-MariaDB-1  port.version.version
    --local version = port.version.version
    --stdnse.print_debug(1,port.version.product)
    --stdnse.print_debug(1,port.version.version)
    --stdnse.print_debug(1,producto)
    --stdnse.print_debug(1,version)
    --stdnse.print_debug(1,banner)
    local exploits = ""
    for line in io.lines ("/usr/share/exploitdb/files_exploits.csv") do
         if string.match(line, banner) then
	     exploits = exploits..line.."\n"
         end
    end
    if not string.match(exploits, "\n") then
        exploits = ""
    end
    exploits = " \n"..exploits
    return exploits
end
